{"version":3,"sources":["webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./src/sketches/sketchesShared.less?319d","webpack:///./src/sketches/algorithm-visualize/algs-visualize.less?34d9","webpack:///./src/sketches/algorithm-visualize/algs-visualize.vue?41b3","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","webpack:///./src/utils/algorithms/visualize-tools/manipulation-recorder.ts","webpack:///./src/sketches/algorithm-visualize/types.ts","webpack:///./src/utils/algorithms/manipulations/manipulations.ts","webpack:///./src/utils/data-structures/heap/BinaryHeap.ts","webpack:///./src/utils/algorithms/sort/HeapSort.ts","webpack:///./src/utils/algorithms/sort/Insertion.ts","webpack:///./src/utils/algorithms/shuffle/Shuffle.ts","webpack:///./src/utils/algorithms/sort/Quick.ts","webpack:///./src/utils/algorithms/sort/MergePlus.ts","webpack:///./src/utils/algorithms/sort/Selection.ts","webpack:///./src/utils/algorithms/sort/Shell.ts","webpack:///./src/utils/algorithms/sort/sort-utils.ts","webpack:///./src/sketches/algorithm-visualize/index.ts","webpack:///./src/sketches/algorithm-visualize/algs-visualize.vue","webpack:///./node_modules/core-js/modules/es.json.stringify.js","webpack:///./node_modules/core-js/modules/es.array.slice.js"],"names":["global","DOMIterables","DOMTokenListPrototype","forEach","createNonEnumerableProperty","handlePrototype","CollectionPrototype","error","COLLECTION_NAME","prototype","$forEach","arrayMethodIsStrict","STRICT_METHOD","module","exports","callbackfn","this","arguments","length","undefined","fails","wellKnownSymbol","V8_VERSION","SPECIES","METHOD_NAME","array","constructor","foo","Boolean","_hoisted_1","class","render","_ctx","_cache","$props","$setup","$data","$options","_component_el_tab_pane","_component_el_tabs","_component_el_card","name","tag","ref","default","sorting","item","index","comparating","arrayEntring","includes","setting","arraySetting","key","style","height","width","containerWidth","left","color","bottom","_","modelValue","usingAlgsName","$event","allSortAlgsList","label","onClick","stepIn","Object","values","runTimeInfo","value","unit","_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","i","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","e","f","normalCompletion","didErr","step","_e2","usingStoreMedia","emptyInfo","algsName","frameCount","currentOperation","totalUnSorted","arrayEntries","comparisons","ArrayAcessType","media","none","records","cursor","reverseCursor","usingTargets","Map","usingFunctions","storage","stringID","func","has","set","target","specificID","id","t","tid","size","get","operations","localStorage","setItem","JSON","stringify","temp","getItem","removeItem","parse","shift","clear","from","result","activeEntry","isKeyFrame","__array_getter","recorder","validateFunction","GETTER","targets","validateTarget","record","__generate_default_record","__array_setter","SETTER","type","entry","args","inComplete","cost","__exch","j","tempA","tempB","__less","isLess","__copy","source","k","__setter","less","start","end","a","slice","N","heapOrder","Math","floor","getParent","getFirstChild","x","swim","sink","pop","unSorted","S","console","heap","max","deleteMax","_less","randomInt","random","sort","mid","findMid","m","lessIJ","another","aux","curr","min","h","sortAlgsDict","function","relativeVelocity","inPlace","boolean","setup","sourceArray","container","$el","offsetWidth","useDynamicDataLength","basicLength","maxCostPerFrame","shuffleOnReset","requiredShuffle","settings","operationCount","operationCost","operationStep","Infinity","arrayEntryCount","comparisonCount","frame","activeRaf","init","algsSpeed","reset","toString","play","hasNext","operation","usingFunction","map","String","ceil","requestAnimationFrame","useSort","cancelAnimationFrame","usingAlgorithm","_newVal","oldVal","__exports__","$","getBuiltIn","apply","uncurryThis","$stringify","exec","charAt","charCodeAt","replace","numberToString","tester","low","hi","fix","match","offset","string","prev","FORCED","stat","forced","replacer","space","l","isConstructor","isObject","toAbsoluteIndex","lengthOfArrayLike","toIndexedObject","createProperty","arrayMethodHasSpeciesSupport","un$Slice","HAS_SPECIES_SUPPORT","proto","Constructor","O","fin"],"mappings":"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","file":"js/algs-visualize.fe8ab5e6.js","sourcesContent":["var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar DOMTokenListPrototype = require('../internals/dom-token-list-prototype');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar handlePrototype = function (CollectionPrototype) {\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n};\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  if (DOMIterables[COLLECTION_NAME]) {\n    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);\n  }\n}\n\nhandlePrototype(DOMTokenListPrototype);\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n} : [].forEach;\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!./sketchesShared.less?vue&type=style&index=0&id=0b409672&lang=less&scoped=true\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!./algs-visualize.less?vue&type=style&index=1&id=0b409672&lang=less&scoped=true\"","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0b409672\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"view\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\")!\n  const _component_el_tabs = _resolveComponent(\"el-tabs\")!\n  const _component_el_card = _resolveComponent(\"el-card\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_TransitionGroup, {\n      name: \"sorting-items\",\n      tag: \"div\",\n      class: \"container\",\n      ref: \"container\"\n    }, {\n      default: _withCtx(() => [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.sorting, (item, index) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: _normalizeClass([\"bar\", {\n          comparating: _ctx.arrayEntring.includes(index),\n          setting: _ctx.arraySetting.includes(index),\n        }]),\n            key: item,\n            style: _normalizeStyle({\n          height: item * 100 + '%',\n          width: _ctx.containerWidth / _ctx.sorting.length + 'px',\n          left: (_ctx.containerWidth / _ctx.sorting.length) * index + 'px',\n        })\n          }, [\n            (_openBlock(), _createElementBlock(\"div\", {\n              class: \"bar-inner\",\n              key: 'child' + item\n            }))\n          ], 6))\n        }), 128)),\n        _createElementVNode(\"div\", {\n          class: \"getter-indicator\",\n          key: \"2\",\n          style: _normalizeStyle({\n          left: (_ctx.containerWidth / _ctx.sorting.length) * _ctx.arrayEntring[0] + 'px',\n          color: '#cea010',\n        })\n        }, \" ⬆ Array Entry Get \", 4),\n        _createElementVNode(\"div\", {\n          class: \"setter-indicator\",\n          key: \"3\",\n          style: _normalizeStyle({\n          left: (_ctx.containerWidth / _ctx.sorting.length) * _ctx.arraySetting[0] + 'px',\n          bottom: '-18%',\n          color: '#ce10a0',\n        })\n        }, \" ⬆ Set \", 4)\n      ]),\n      _: 1\n    }, 512),\n    _createVNode(_component_el_tabs, {\n      class: \"algorithms-switcher\",\n      \"tab-position\": \"left\",\n      modelValue: _ctx.usingAlgsName,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.usingAlgsName) = $event))\n    }, {\n      default: _withCtx(() => [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.allSortAlgsList, (item) => {\n          return (_openBlock(), _createBlock(_component_el_tab_pane, {\n            key: item,\n            label: item,\n            name: item\n          }, null, 8, [\"label\", \"name\"]))\n        }), 128))\n      ]),\n      _: 1\n    }, 8, [\"modelValue\"]),\n    _createVNode(_component_el_card, {\n      class: \"info-card\",\n      onClick: _ctx.stepIn\n    }, {\n      default: _withCtx(() => [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Object.values(_ctx.runTimeInfo), (item) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: item.label,\n            class: \"text item\",\n            onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.stepIn && _ctx.stepIn(...args)))\n          }, _toDisplayString(item.label + \":  \" + item.value + \" \" + (item.unit || \"\")), 1))\n        }), 128))\n      ]),\n      _: 1\n    }, 8, [\"onClick\"])\n  ]))\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { ManipulationRecord } from \"../manipulations/manipulations\";\n\nenum usingStoreMedia {\n  \"none\",\n  \"sessionStorage\",\n  \"localStorage\",\n  \"indexDB\",\n}\n\nexport class ManipulationRecorder {\n  private records: ManipulationRecord[] = [];\n  private storage: usingStoreMedia;\n  private cursor = 0;\n  private reverseCursor = 0;\n\n  public usingTargets = new Map<string, any>();\n  public usingFunctions = new Map<string, any>();\n\n  constructor(media: usingStoreMedia = usingStoreMedia.none) {\n    this.storage = media;\n  }\n\n  validateFunction(stringID: string, func: any) {\n    if (!this.usingFunctions.has(stringID))\n      this.usingFunctions.set(stringID, func);\n  }\n\n  validateTarget<T>(target: T, specificID?: string) {\n    let id: string = \"\";\n    this.usingTargets.forEach((t, tid) => {\n      if (target === t) {\n        id = tid;\n      }\n    });\n    if (id) return id;\n    else {\n      id = specificID || `t${this.usingTargets.size}`;\n      this.usingTargets.set(id, target);\n      return id;\n    }\n  }\n\n  getTarget(id: string) {\n    return this.usingTargets.get(id);\n  }\n\n  record(...operations: ManipulationRecord[]) {\n    switch (this.storage) {\n      case usingStoreMedia.localStorage:\n        operations.forEach((e, i) =>\n          localStorage.setItem(`m${this.cursor + i}`, JSON.stringify(e))\n        );\n        break;\n      default:\n        this.records.push(...operations);\n        break;\n    }\n    this.cursor += operations.length;\n  }\n\n  play(): ManipulationRecord | undefined {\n    this.reverseCursor++;\n    this.cursor--;\n    switch (this.storage) {\n      case usingStoreMedia.localStorage:\n        const temp = localStorage.getItem(`m${this.reverseCursor - 1}`);\n        localStorage.removeItem(`m${this.reverseCursor - 1}`);\n        if (temp) return JSON.parse(temp);\n      default:\n        return this.records.shift();\n    }\n  }\n\n  reset() {\n    this.reverseCursor = 0;\n    this.cursor = 0;\n    this.usingTargets.clear();\n    this.usingFunctions.clear();\n    switch (this.storage) {\n      case usingStoreMedia.localStorage:\n        localStorage.clear();\n      default:\n        this.records = [];\n    }\n  }\n\n  hasNext() {\n    return this.cursor > 0;\n  }\n\n  getRecord() {\n    switch (this.storage) {\n      case usingStoreMedia.localStorage:\n        return Array.from({ length: this.cursor }, (e, i) => {\n          const result = localStorage.getItem(`m${i}`);\n          if (result) return JSON.parse(result);\n        });\n      default:\n        return [...this.records];\n    }\n  }\n}\n","export interface AlgsRunTimeInfo {\n  [index: string]: {\n    label: string;\n    value: string;\n    unit?: string;\n  };\n}\n\nexport const emptyInfo = {\n  algsName: {\n    label: \"算法名称\",\n    value: \"\",\n  },\n  frameCount: {\n    label: \"运行帧数\",\n    value: \"\",\n  },\n  currentOperation: {\n    label: \"当前操作\",\n    value: \"\",\n  },\n  totalUnSorted: {\n    label: \"数据总量\",\n    value: \"\",\n  },\n  arrayEntries: {\n    label: \"累计数组访问\",\n    value: \"\",\n  },\n  comparisons: {\n    label: \"累计比较数\",\n    value: \"\",\n  },\n};\n","import { ManipulationRecorder } from \"../visualize-tools/manipulation-recorder\";\n\nexport enum ArrayAcessType {\n  GETTER = \"Access Array Value\",\n  SETTER = \"Set Array Value\",\n}\n\n// global variables\nlet activeEntry = \"\";\nlet isKeyFrame = false;\n\nconst __array_getter = <T>(\n  target: T[],\n  index: number,\n  recorder?: ManipulationRecorder\n) => {\n  if (recorder) {\n    recorder.validateFunction(ArrayAcessType.GETTER, __array_getter);\n    const targets = [recorder.validateTarget(target)];\n    recorder.record(\n      __generate_default_record(\n        ArrayAcessType.GETTER,\n        activeEntry,\n        targets,\n        [index],\n        !isKeyFrame\n      )\n    );\n  }\n  return target[index];\n};\n\nconst __array_setter = <T>(\n  target: T[],\n  index: number,\n  value: T,\n  recorder?: ManipulationRecorder\n) => {\n  if (recorder) {\n    recorder.validateFunction(ArrayAcessType.SETTER, __array_setter);\n    const targets = [recorder.validateTarget(target)];\n    recorder.record(\n      __generate_default_record(\n        ArrayAcessType.SETTER,\n        activeEntry,\n        targets,\n        [index, value],\n        !isKeyFrame\n      )\n    );\n  }\n  target[index] = value;\n};\n\nexport interface ManipulationRecord {\n  func: ArrayAcessType; // array access types, GETTER | SETTER\n  entry: string; // larger manipulation entries, __less | __exch etc.\n  cost: number; // cost of manipulation\n  targets: string[]; // target array of the manipulation\n  args: (number | string | any)[]; // manipulation arguements\n  inComplete: boolean;\n}\n\nconst __generate_default_record = (\n  type: ArrayAcessType,\n  entry: string,\n  targets: string[],\n  args: (string | number | any)[],\n  inComplete = true\n) => {\n  return {\n    func: type,\n    entry: entry,\n    targets: targets,\n    cost: 1,\n    args: args,\n    inComplete: inComplete,\n  };\n};\n\nexport const __exch = <T>(\n  target: T[],\n  i: number,\n  j: number,\n  recorder?: ManipulationRecorder\n) => {\n  activeEntry = \"exch\";\n  const tempA = __array_getter(target, i, recorder);\n  const tempB = __array_getter(target, j, recorder);\n  __array_setter(target, i, tempB, recorder);\n  isKeyFrame = true;\n  __array_setter(target, j, tempA, recorder);\n  isKeyFrame = false;\n};\nexport const __less = <T>(\n  target: T[],\n  i: number,\n  j: number,\n  recorder?: ManipulationRecorder\n) => {\n  activeEntry = \"less\";\n  isKeyFrame = true;\n  const isLess =\n    __array_getter(target, i, recorder) < __array_getter(target, j, recorder);\n  isKeyFrame = false;\n  return isLess;\n};\n\nexport const __copy = <T>(\n  target: T[],\n  source: T[],\n  i: number,\n  j: number,\n  recorder?: ManipulationRecorder\n) => {\n  activeEntry = \"copy\";\n  for (let k = i; k < j; k++) {\n    __array_setter(target, k, __array_getter(source, k, recorder), recorder);\n  }\n};\nexport const __setter = <T>(\n  target: T[],\n  source: T[],\n  i: number,\n  j: number,\n  recorder?: ManipulationRecorder\n) => {\n  activeEntry = \"set\";\n  isKeyFrame = true;\n  __array_setter(target, i, __array_getter(source, j, recorder), recorder);\n  isKeyFrame = false;\n};\n","import { __exch, __less } from \"@/utils/algorithms/manipulations/manipulations\";\nimport { ManipulationRecorder } from \"@/utils/algorithms/visualize-tools/manipulation-recorder\";\nimport { CompareFunction } from \"../../algorithms/types\";\n\n/**\n * @class Inplementation of binary heap\n * @function swim (k:number)=>void\n * @function sink (k:number)=>void\n * @function deleteMax ()=>T\n */\nexport class BinaryHeap<T> {\n  private a: T[];\n  private N: number;\n  private less: CompareFunction;\n  private recorder: ManipulationRecorder | undefined;\n\n  constructor(\n    source: T[],\n    less: CompareFunction = __less,\n    start?: number,\n    end?: number,\n    recorder?: ManipulationRecorder\n  ) {\n    this.a = source.slice(start, end);\n    this.N = this.a.length - 1;\n    if (end && start) this.N = end - start - 1;\n    this.less = less;\n    this.recorder = recorder;\n    if (this.recorder) this.recorder.validateTarget(this.a, \"sorting-base\");\n    this.heapOrder();\n  }\n\n  private getParent(k: number) {\n    return Math.floor((k - 1) / 2);\n  }\n\n  private getFirstChild(k: number) {\n    return 2 * k + 1;\n  }\n\n  private swim(k: number) {\n    while (k > 0 && this.less(this.a, this.getParent(k), k, this.recorder)) {\n      __exch(this.a, k, this.getParent(k), this.recorder);\n      k = this.getParent(k);\n    }\n  }\n\n  private sink(k: number) {\n    while (this.getFirstChild(k) <= this.N) {\n      let j = this.getFirstChild(k);\n      if (j < this.N && this.less(this.a, j, j + 1, this.recorder)) j++;\n      if (this.less(this.a, j, k, this.recorder)) break;\n      __exch(this.a, k, j, this.recorder);\n      k = j;\n    }\n  }\n\n  public insert(x: T) {\n    this.a.push(x);\n    this.N++;\n    this.swim(this.N);\n  }\n\n  public deleteMax() {\n    __exch(this.a, 0, this.N--, this.recorder);\n    this.sink(0);\n    return this.a.pop();\n  }\n\n  public heapOrder() {\n    for (let i = this.N; i >= 0; i--) {\n      if (this.getFirstChild(i) <= this.N) {\n        this.sink(i);\n      }\n    }\n  }\n\n  public getHeapArray() {\n    return this.a;\n  }\n}\n","import { BinaryHeap } from \"./../../data-structures/heap/BinaryHeap\";\nimport { CompareFunction, SortFunction } from \"../types\";\nimport { ManipulationRecorder } from \"../visualize-tools/manipulation-recorder\";\nimport { __less } from \"../manipulations/manipulations\";\nimport { isSorted } from \"./sort-utils\";\n\n/**\n * use Heap sort to sort a array of comparables.\n * @param unSorted the array wait to be sorted.\n * @param less compare function determine the smaller one of two elements..\n * @param operations array to record operations.\n * @returns {Comparable[]} sorted array.\n */\nexport const useHeapSort = <T>(\n  unSorted: T[],\n  less: CompareFunction = __less,\n  start?: number,\n  end?: number,\n  recorder?: ManipulationRecorder\n): T[] => {\n  const a = unSorted;\n  const S = start || 0;\n  const N = end || a.length;\n\n  // return if only one element\n  if (unSorted.length < 2) return unSorted;\n  if (less(unSorted, S, S + 1) === less(unSorted, S + 1, S)) {\n    console.error(\"Heap Sort: Compare function invalid!\");\n    return unSorted;\n  }\n\n  const heap = new BinaryHeap(a, less, S, N, recorder);\n  for (let i = N - 1; i >= S; i--) {\n    const max = heap.deleteMax();\n    if (max) a[i] = max;\n  }\n\n  isSorted(a, S, N, less, recorder);\n  return a;\n};\n","import { __exch, __less } from \"./../manipulations/manipulations\";\nimport { CompareFunction } from \"../types\";\nimport { ManipulationRecorder } from \"../visualize-tools/manipulation-recorder\";\nimport { isSorted } from \"./sort-utils\";\n\n/**\n * use Insertion sort to sort a array of comparables.\n * @param unSorted the array wait to be sorted.\n * @param less compare function determine the smaller one of two elements..\n * @param operations array to record operations.\n * @returns {Comparable[]} sorted array.\n */\nexport const useInsertionSort = <T>(\n  unSorted: T[],\n  less: CompareFunction = __less,\n  start?: number,\n  end?: number,\n  recorder?: ManipulationRecorder\n): T[] => {\n  const a = unSorted;\n  const S = start || 0;\n  const N = end || a.length;\n\n  // return if only one element\n  if (unSorted.length < 2) return unSorted;\n  if (less(unSorted, S, S + 1) === less(unSorted, S + 1, S)) {\n    console.error(\"Insertion Sort: Compare function invalid!\");\n    return unSorted;\n  }\n\n  // main loop\n  for (let i = S; i < N; i++) {\n    for (let j = i; j > S && less(a, j, j - 1, recorder); j--) {\n      __exch(a, j, j - 1, recorder);\n    }\n  }\n\n  isSorted(a, S, N, less, recorder);\n  return a;\n};\n","import { __exch } from \"../manipulations/manipulations\";\nimport { CompareFunction } from \"../types\";\nimport { ManipulationRecorder } from \"../visualize-tools/manipulation-recorder\";\n\nexport const useShuffle = <T>(\n  source: T[],\n  _less?: CompareFunction,\n  start?: number,\n  end?: number,\n  recorder?: ManipulationRecorder\n) => {\n  const a = source;\n  const S = start || 0;\n  const N = end || a.length;\n  for (let i = S; i < N; i++) {\n    const randomInt = Math.floor(Math.random() * (i - S)) + S;\n    __exch(a, i, randomInt, recorder);\n  }\n  return a;\n};\n","import { useInsertionSort } from \"./Insertion\";\nimport { __exch, __less } from \"./../manipulations/manipulations\";\nimport { useShuffle } from \"../shuffle/Shuffle\";\nimport { CompareFunction } from \"./../types\";\nimport { ManipulationRecorder } from \"../visualize-tools/manipulation-recorder\";\nimport { isSorted } from \"./sort-utils\";\n\n/**\n * use Quick sort to sort a array of comparables.\n * @param unSorted the array wait to be sorted.\n * @param less compare function determine the smaller one of two elements..\n * @param operations array to record operations.\n * @returns {Comparable[]} sorted array.\n */\nexport const useQuickSort = <T>(\n  unSorted: T[],\n  less: CompareFunction = __less,\n  start?: number,\n  end?: number,\n  recorder?: ManipulationRecorder\n): T[] => {\n  const a = unSorted;\n  const S = start || 0;\n  const N = end || a.length;\n\n  // return if only one element\n  if (unSorted.length < 2) return unSorted;\n  if (less(unSorted, S, S + 1) === less(unSorted, S + 1, S)) {\n    console.error(\"Shell Sort: Compare function invalid!\");\n    return unSorted;\n  }\n\n  useShuffle(a, less, S, N, recorder);\n  sort(a, S, N, less, recorder);\n\n  // final check\n  isSorted(a, S, N, less, recorder);\n  return a;\n};\n\nconst sort = <T>(\n  a: T[],\n  i: number,\n  j: number,\n  less: CompareFunction,\n  recorder?: ManipulationRecorder\n) => {\n  if (j - i <= 7) {\n    useInsertionSort(a, less, i, j, recorder);\n    return;\n  }\n  const mid = partition(a, i, j, less, recorder);\n  sort(a, i, mid, less, recorder);\n  sort(a, mid + 1, j, less, recorder);\n};\n\nconst partition = <T>(\n  a: T[],\n  i: number,\n  j: number,\n  less: CompareFunction,\n  recorder?: ManipulationRecorder\n) => {\n  const mid = findMid(a, i, j - 1, less, recorder);\n  __exch(a, i, mid, recorder);\n  let m = i;\n  let n = j;\n  while (true) {\n    while (less(a, ++m, i, recorder)) if (m === j - 1) break;\n    while (less(a, i, --n, recorder)) if (n === i) break;\n    if (m >= n) break;\n    __exch(a, m, n, recorder);\n  }\n  __exch(a, i, n, recorder);\n\n  return n;\n};\n\nconst findMid = <T>(\n  a: T[],\n  i: number,\n  j: number,\n  less: CompareFunction,\n  recorder?: ManipulationRecorder\n) => {\n  const lessIJ = less(a, i, j, recorder) ? i : j;\n  const another = lessIJ === i ? j : i;\n  if (j - i <= 2) return lessIJ;\n  else {\n    const mid = Math.floor((i + j) / 2);\n    if (less(a, lessIJ, mid, recorder)) {\n      return less(a, another, mid, recorder) ? another : mid;\n    }\n    return lessIJ;\n  }\n};\n","import { __copy, __less, __setter } from \"./../manipulations/manipulations\";\nimport { useInsertionSort } from \"./Insertion\";\nimport { ManipulationRecorder } from \"../visualize-tools/manipulation-recorder\";\nimport { CompareFunction } from \"../types\";\nimport { isSorted } from \"./sort-utils\";\n\n/**\n * use Merge sort to sort a array of comparables.\n * @param unSorted the array wait to be sorted.\n * @param less compare function determine the smaller one of two elements..\n * @param operations array to record operations.\n * @returns {T[]} sorted array.\n */\nexport const useMergePlusSort = <T>(\n  unSorted: T[],\n  less: CompareFunction = __less,\n  start?: number,\n  end?: number,\n  recorder?: ManipulationRecorder\n): T[] => {\n  // variables\n  const a = unSorted;\n  const S = start || 0;\n  const N = end || a.length;\n  const aux: T[] = [];\n\n  // return if only one element\n  if (unSorted.length < 2) return unSorted;\n  if (less(unSorted, S, S + 1) === less(unSorted, S + 1, S)) {\n    console.error(\"Merge Sort: Compare function invalid!\");\n    return unSorted;\n  }\n\n  sort(a, S, N, aux, less, recorder);\n  isSorted(a, S, N, less, recorder);\n  return a;\n};\n\nconst sort = <T>(\n  source: T[],\n  start: number,\n  end: number,\n  aux: T[],\n  less: CompareFunction,\n  recorder?: ManipulationRecorder\n) => {\n  if (end - start < 8) {\n    useInsertionSort(source, less, start, end, recorder);\n  } else {\n    const mid = Math.floor((start + end) / 2);\n    sort(source, start, mid, aux, less, recorder);\n    sort(source, mid, end, aux, less, recorder);\n    merge(source, start, mid, end, aux, less, recorder);\n  }\n};\n\nexport const merge = <T>(\n  source: T[],\n  start: number,\n  mid: number,\n  end: number,\n  aux: T[],\n  less: CompareFunction,\n  recorder?: ManipulationRecorder\n) => {\n  __copy(aux, source, start, end, recorder);\n  let i = start;\n  let j = mid;\n  while (i < mid || j < end) {\n    const curr = i + j - mid;\n    if (i >= mid) {\n      __setter(source, aux, curr, j++, recorder);\n    } else if (j >= end) {\n      __setter(source, aux, curr, i++, recorder);\n    } else if (less(aux, i, j, recorder)) {\n      __setter(source, aux, curr, i++, recorder);\n    } else if (!less(aux, i, j, recorder)) {\n      __setter(source, aux, curr, j++, recorder);\n    }\n  }\n};\n","import { __exch, __less } from \"./../manipulations/manipulations\";\nimport { CompareFunction } from \"../types\";\nimport { ManipulationRecorder } from \"../visualize-tools/manipulation-recorder\";\nimport { isSorted } from \"./sort-utils\";\n\n/**\n * use Selection sort to sort a array of comparables.\n * @param unSorted the array wait to be sorted.\n * @param less compare function determine the smaller one of two elements..\n * @param operations array to record operations.\n * @returns {Comparable[]} sorted array.\n */\nexport const useSelectionSort = <T>(\n  unSorted: T[],\n  less: CompareFunction = __less,\n  start?: number,\n  end?: number,\n  recorder?: ManipulationRecorder\n): T[] => {\n  const a = unSorted;\n  const S = start || 0;\n  const N = end || a.length;\n\n  // return if array too short or lack of valid compare function.\n  if (unSorted.length < 2) return unSorted;\n  if (less(unSorted, S, S + 1) === less(unSorted, S + 1, S)) {\n    console.error(\"Selection Sort: Invalid compare function!\");\n    return unSorted;\n  }\n\n  // main loop\n  for (let i = S; i < N; i++) {\n    let min = i;\n    for (let j = i + 1; j < N; j++) {\n      const isLess = less(a, j, min, recorder);\n      if (isLess) min = j;\n    }\n    __exch(a, i, min, recorder);\n  }\n\n  isSorted(a, S, N, less, recorder);\n  return a;\n};\n","import { __exch, __less } from \"./../manipulations/manipulations\";\nimport { CompareFunction } from \"../types\";\nimport { ManipulationRecorder } from \"../visualize-tools/manipulation-recorder\";\nimport { isSorted } from \"./sort-utils\";\n\n/**\n * use Shell sort to sort a array of comparables.\n * @param unSorted the array wait to be sorted.\n * @param less compare function determine the smaller one of two elements..\n * @param operations array to record operations.\n * @returns {Comparable[]} sorted array.\n */\nexport const useShellSort = <T>(\n  unSorted: T[],\n  less: CompareFunction = __less,\n  start?: number,\n  end?: number,\n  recorder?: ManipulationRecorder\n): T[] => {\n  const a = unSorted;\n  const S = start || 0;\n  const N = end || a.length;\n\n  // return if only one element\n  if (unSorted.length < 2) return unSorted;\n  if (less(unSorted, S, S + 1) === less(unSorted, S + 1, S)) {\n    console.error(\"Shell Sort: Compare function invalid!\");\n    return unSorted;\n  }\n\n  let h = 1;\n  while (h < (N - S) / 3) h = h * 3 + 1;\n  while (h >= 1) {\n    for (let i = S + h; i < N; i++) {\n      for (let j = i; j >= h && less(a, j, j - h, recorder); j -= h) {\n        __exch(a, j, j - h, recorder);\n      }\n    }\n    h = Math.floor(h / 3);\n  }\n  // main loop\n  isSorted(a, S, N, less, recorder);\n  return a;\n};\n","import { useHeapSort } from \"./HeapSort\";\nimport { useQuickSort } from \"./Quick\";\nimport { useMergePlusSort } from \"./MergePlus\";\nimport { useMergeSort } from \"./Merge\";\nimport { useSelectionSort } from \"./Selection\";\nimport { useInsertionSort } from \"./Insertion\";\nimport { useShellSort } from \"./Shell\";\nimport { ManipulationRecorder } from \"../visualize-tools/manipulation-recorder\";\nimport { useShuffle } from \"../shuffle/Shuffle\";\nimport { SortFunction, CompareFunction } from \"../types\";\nimport { __less } from \"../manipulations/manipulations\";\n\ndeclare interface SortFunctionInfo {\n  function: SortFunction;\n  relativeVelocity: number;\n  inPlace: boolean;\n}\n\n/**\n * @Map Dictionary that keep all the sorting methods.\n */\nexport const sortAlgsDict = new Map<string, SortFunctionInfo>([\n  [\"Shuffle\", { function: useShuffle, relativeVelocity: 1, inPlace: true }],\n  [\n    \"Selection\",\n    { function: useSelectionSort, relativeVelocity: 0.1, inPlace: true },\n  ],\n  [\n    \"Insertion\",\n    { function: useInsertionSort, relativeVelocity: 0.1, inPlace: true },\n  ],\n  [\"Shell\", { function: useShellSort, relativeVelocity: 0.5, inPlace: true }],\n  // [\"Merge\", { function: useMergeSort, relativeVelocity: 0.7, inPlace: false }],\n  [\n    \"Merge+\",\n    { function: useMergePlusSort, relativeVelocity: 0.8, inPlace: false },\n  ],\n  [\"Heap\", { function: useHeapSort, relativeVelocity: 0.9, inPlace: true }],\n  [\"Quick\", { function: useQuickSort, relativeVelocity: 1, inPlace: true }],\n]);\n\nexport const isSorted = <T>(\n  source: T[],\n  i: number = 0,\n  j: number = source.length,\n  less: CompareFunction = __less,\n  recorder?: ManipulationRecorder\n) => {\n  let boolean = true;\n  for (let k = i; k < j - i - 1 && boolean; k++) {\n    const isLess = !__less(source, k, k + 1, recorder);\n    if (isLess) boolean = false;\n  }\n  return boolean;\n};\n","import { AlgsRunTimeInfo, emptyInfo } from \"./types\";\nimport { ManipulationRecorder } from \"@/utils/algorithms/visualize-tools/manipulation-recorder\";\nimport { sortAlgsDict } from \"@/utils/algorithms/sort/sort-utils\";\nimport {\n  computed,\n  defineComponent,\n  onMounted,\n  reactive,\n  ref,\n  watch,\n} from \"vue\";\nimport { OperationRecord } from \"@/utils/algorithms/types\";\nimport { Vue } from \"vue-class-component\";\nimport { ArrayAcessType } from \"@/utils/algorithms/manipulations/manipulations\";\n\nexport default defineComponent({\n  setup() {\n    const sourceArray = Array.from({ length: 10000 }, () => Math.random());\n    const container = ref<Vue | null>(null);\n    const containerWidth = computed(() => container.value?.$el.offsetWidth);\n\n    // settings 配置项\n    const useDynamicDataLength = ref(false);\n    const basicLength = ref(400);\n    const maxCostPerFrame = ref(1);\n    const shuffleOnReset = ref(true);\n    const requiredShuffle = ref(false);\n    const settings = reactive({\n      useDynamicDataLength,\n      basicLength,\n      maxCostPerFrame,\n      shuffleOnReset,\n    });\n\n    // sorting stuffs 排序列表\n    const unSorted = ref<number[]>([]);\n    const sorting = ref<number[]>([]);\n    const allSortAlgsList = ref<string[]>([]);\n    const usingAlgsName = ref<string>(\"\");\n\n    // get all available algorithms 获取所有可用算法\n    for (const [key] of sortAlgsDict) {\n      allSortAlgsList.value.push(key);\n    }\n\n    // operation recorder 操作记录仪\n    const operations = ref<OperationRecord[]>([]);\n    const recorder = new ManipulationRecorder();\n    const operationCount = ref(0);\n    const operationCost = ref(0);\n    const operationStep = ref(Infinity);\n    const stepIn = () => operationStep.value++;\n\n    // indicators 运行指标\n    const runTimeInfo = reactive<AlgsRunTimeInfo>(emptyInfo);\n    const arrayEntring = ref<number[]>([]);\n    const arraySetting = ref<number[]>([]);\n    const arrayEntryCount = ref(0);\n    const comparisonCount = ref(0);\n\n    // animation control Raf动画控制\n    const frame = ref(0);\n    const activeRaf = ref(0);\n\n    const init = () => {\n      // different source data length for different algorithms 动态调整数组长度\n      maxCostPerFrame.value = 20;\n      if (\n        shuffleOnReset.value ||\n        sorting.value.length < 2 ||\n        requiredShuffle.value\n      ) {\n        const algsSpeed =\n          sortAlgsDict.get(usingAlgsName.value)?.relativeVelocity || 1;\n        unSorted.value = [\n          ...sourceArray.slice(0, Math.floor(basicLength.value)),\n        ];\n        if (useDynamicDataLength.value) {\n          unSorted.value = [\n            ...sourceArray.slice(0, Math.floor(basicLength.value * algsSpeed)),\n          ];\n        } else {\n          maxCostPerFrame.value = maxCostPerFrame.value / algsSpeed;\n        }\n        sorting.value = [...unSorted.value];\n      } else {\n        unSorted.value = [...sorting.value];\n      }\n\n      // reset all variables 重制所有指标\n      operations.value = [];\n      operationCost.value = 0;\n      recorder.reset();\n      arrayEntring.value = [];\n      operationCount.value = 0;\n      frame.value = 0;\n      comparisonCount.value = 0;\n      arrayEntryCount.value = 0;\n\n      // update info 更新指标信息\n      runTimeInfo.algsName.value = usingAlgsName.value;\n      runTimeInfo.totalUnSorted.value = sorting.value.length.toString();\n    };\n\n    const play = () => {\n      if (recorder.hasNext()) {\n        let inComplete = false;\n        while (\n          recorder.hasNext() &&\n          ((operationCost.value <= maxCostPerFrame.value * frame.value &&\n            operationCost.value <= operationStep.value) ||\n            inComplete)\n        ) {\n          // operation iteration  操作记录仪迭代\n          const operation = recorder.play();\n          if (operation) {\n            const usingFunction = recorder.usingFunctions.get(operation?.func);\n            const targets = operation.targets.map((t) =>\n              recorder.usingTargets.get(t)\n            );\n            usingFunction(...targets, ...operation.args);\n            inComplete = operation.inComplete;\n\n            // tracing active items\n            if (operation?.func === ArrayAcessType.GETTER)\n              arrayEntring.value = [...operation?.args];\n            if (operation?.func === ArrayAcessType.SETTER)\n              arraySetting.value = [operation?.args[0]];\n\n            // update info  更新指标信息\n            arrayEntryCount.value++;\n            runTimeInfo.currentOperation.value = operation.entry || \"\";\n            if (runTimeInfo.currentOperation.value === \"less\")\n              comparisonCount.value += 0.5;\n\n            runTimeInfo.arrayEntries.value = String(arrayEntryCount.value);\n            runTimeInfo.comparisons.value = String(\n              Math.ceil(comparisonCount.value)\n            );\n\n            // operation counter increment  操作记录增量\n            operationCost.value++;\n            operationCount.value++;\n          }\n        }\n        // update info  更新指标信息\n        runTimeInfo.frameCount.value = frame.value.toString();\n\n        // frame counter increment  帧数增量\n        frame.value++;\n        activeRaf.value = requestAnimationFrame(play);\n      } else {\n        // arrayEntring.value = [];\n      }\n    };\n\n    const useSort = () => {\n      cancelAnimationFrame(activeRaf.value);\n\n      const usingAlgorithm = sortAlgsDict.get(usingAlgsName.value)?.function;\n      if (!usingAlgorithm) return;\n      init();\n      recorder.validateTarget(unSorted.value, \"sorting-base\");\n      usingAlgorithm(unSorted.value, undefined, undefined, undefined, recorder);\n      recorder.usingTargets.set(\"sorting-base\", sorting.value);\n      activeRaf.value = requestAnimationFrame(play);\n    };\n\n    watch(usingAlgsName, (_newVal, oldVal) => {\n      if (sortAlgsDict.get(oldVal)?.inPlace) requiredShuffle.value = false;\n      else requiredShuffle.value = true;\n      useSort();\n    });\n\n    onMounted(useSort);\n    return {\n      container,\n      containerWidth,\n      sorting,\n      arrayEntring,\n      arraySetting,\n      usingAlgsName,\n      operations,\n      operationCount,\n      allSortAlgsList,\n      runTimeInfo,\n      stepIn,\n      settings,\n    };\n  },\n});\n","import { render } from \"./algs-visualize.vue?vue&type=template&id=0b409672&scoped=true&ts=true\"\nimport script from \"./index.ts?vue&type=script&lang=ts\"\nexport * from \"./index.ts?vue&type=script&lang=ts\"\n\nimport \"../sketchesShared.less?vue&type=style&index=0&id=0b409672&lang=less&scoped=true\"\nimport \"./algs-visualize.less?vue&type=style&index=1&id=0b409672&lang=less&scoped=true\"\n\nimport exportComponent from \"/Users/natsuha_sg/Documents/Code/visual-sketches/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0b409672\"]])\n\nexport default __exports__","var $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar apply = require('../internals/function-apply');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\n\nvar Array = global.Array;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar exec = uncurryThis(/./.exec);\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar replace = uncurryThis(''.replace);\nvar numberToString = uncurryThis(1.0.toString);\n\nvar tester = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\n\nvar fix = function (match, offset, string) {\n  var prev = charAt(string, offset - 1);\n  var next = charAt(string, offset + 1);\n  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {\n    return '\\\\u' + numberToString(charCodeAt(match, 0), 16);\n  } return match;\n};\n\nvar FORCED = fails(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"'\n    || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\n\nif ($stringify) {\n  // `JSON.stringify` method\n  // https://tc39.es/ecma262/#sec-json.stringify\n  // https://github.com/tc39/proposal-well-formed-stringify\n  $({ target: 'JSON', stat: true, forced: FORCED }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      for (var i = 0, l = arguments.length, args = Array(l); i < l; i++) args[i] = arguments[i];\n      var result = apply($stringify, null, args);\n      return typeof result == 'string' ? replace(result, tester, fix) : result;\n    }\n  });\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar un$Slice = require('../internals/array-slice');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n\nvar SPECIES = wellKnownSymbol('species');\nvar Array = global.Array;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = lengthOfArrayLike(O);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (isConstructor(Constructor) && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return un$Slice(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n"],"sourceRoot":""}